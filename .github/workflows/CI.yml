name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "*"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 10
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        with:
          path: |
            node_modules
            packages/*/node_modules
            packages/hardhat-core/test/internal/hardhat-network/stack-traces/compilers
            packages/hardhat-core/test/internal/hardhat-network/provider/.hardhat_node_test_cache
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('yarn.lock') }}-${{ hashFiles('packages/hardhat-core/test/internal/hardhat-network/provider/node.ts') }}
      - name: Install node-gyp-cache
        run: |
          yarn global add node-gyp-cache
          yarn config set node_gyp node-gyp-cache
      - name: Install
        run: yarn --frozen-lockfile
      - name: Clean
        run: yarn clean
      - name: Build
        run: yarn build
      - name: lint
        run: yarn lint
      - name: Check dependency versions
        run: node scripts/check-dependencies.js

  typecheck_tests:
    name: Typecheck tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 10
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        with:
          path: |
            node_modules
            packages/*/node_modules
            packages/hardhat-core/test/internal/hardhat-network/stack-traces/compilers
            packages/hardhat-core/test/internal/hardhat-network/provider/.hardhat_node_test_cache
          key: ${{ runner.os }}-node-10-${{ hashFiles('yarn.lock') }}-${{ hashFiles('packages/hardhat-core/test/internal/hardhat-network/provider/node.ts') }}
      - name: Install node-gyp-cache
        run: |
          yarn global add node-gyp-cache
          yarn config set node_gyp node-gyp-cache
      - name: Install
        run: yarn --frozen-lockfile
      - name: Clean
        run: yarn clean
      - name: Build tests
        run: yarn build-test

  test_windows:
    name: Test on Windows with Node 10
    runs-on: windows-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: actions/checkout@v2
      - name: Install
        run: yarn --frozen-lockfile
      - name: Run tests
        run: yarn test

  test_macos:
    name: Test on MacOS with Node 10
    runs-on: macos-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 10
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        with:
          path: |
            node_modules
            packages/*/node_modules
            packages/hardhat-core/test/internal/hardhat-network/stack-traces/compilers
            packages/hardhat-core/test/internal/hardhat-network/provider/.hardhat_node_test_cache
          key: ${{ runner.os }}-node-10-${{ hashFiles('yarn.lock') }}-${{ hashFiles('packages/hardhat-core/test/internal/hardhat-network/provider/node.ts') }}
      - name: Install node-gyp-cache
        run: |
          yarn global add node-gyp-cache
          yarn config set node_gyp node-gyp-cache
      - name: Install
        run: yarn --frozen-lockfile
      - name: Clean
        run: yarn clean
      - name: Run tests
        run: yarn test

  test_linux:
    name: Test on Linux with Node ${{ matrix.node }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 10, 12, 14, 15 ]
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: install vyper
        run: docker pull ethereum/vyper:0.1.0b10
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        with:
          path: |
            node_modules
            packages/*/node_modules
            packages/hardhat-core/test/internal/hardhat-network/stack-traces/compilers
            packages/hardhat-core/test/internal/hardhat-network/provider/.hardhat_node_test_cache
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('yarn.lock') }}-${{ hashFiles('packages/hardhat-core/test/internal/hardhat-network/provider/node.ts') }}
      - name: Install node-gyp-cache
        run: |
          yarn global add node-gyp-cache
          yarn config set node_gyp node-gyp-cache
      - name: Install
        run: yarn --frozen-lockfile
      - name: Clean
        run: yarn clean
      - name: Run tests
        run: yarn test

  # We should run this tests with multiple configurations
  # but somehow the requests to Alchemy take much longer when doing that.
  # As a temporal workaround, we run them with a single config.
  # 
  # Once we properly refactor Hardhat Network's tests we should
  # add more configurations (different OS and node versions).
  #
  # We should also understand what's going on before blindly refactoring them.
  test_fork:
    name: Test Hardhat Network's fork
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 10
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        with:
          path: |
            node_modules
            packages/*/node_modules
            packages/hardhat-core/test/internal/hardhat-network/stack-traces/compilers
            packages/hardhat-core/test/internal/hardhat-network/provider/.hardhat_node_test_cache
          key: ${{ runner.os }}-node-10-${{ hashFiles('yarn.lock') }}-${{ hashFiles('packages/hardhat-core/test/internal/hardhat-network/provider/node.ts') }}
      - name: Install node-gyp-cache
        run: |
          yarn global add node-gyp-cache
          yarn config set node_gyp node-gyp-cache
      - name: Install
        run: yarn --frozen-lockfile
      - name: Clean
        run: yarn clean
      - name: Run core tests
        env:
          INFURA_URL: ${{ secrets.INFURA_URL }}
          ALCHEMY_URL: ${{ secrets.ALCHEMY_URL }}
          DO_NOT_SET_THIS_ENV_VAR____IS_HARDHAT_CI: true
          FORCE_COLOR: 3
        run: |
          cd packages/hardhat-core
          yarn build
          npx mocha --recursive "test/internal/hardhat-network/{helpers,jsonrpc,provider}/*.ts"
