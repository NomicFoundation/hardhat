name: vNext CI

on:
  merge_group:
  push:
    branches:
      - v-next
    paths:
      - ".github/workflows/v-next-ci.yml"
      - "v-next/**"
      - "config-v-next/**"
      - "pnpm-lock.yaml"
      - "scripts/**"
  pull_request:
    paths:
      - ".github/workflows/v-next-ci.yml"
      - "v-next/**"
      - "config-v-next/**"
      - "pnpm-lock.yaml"
      - "scripts/**"
  workflow_dispatch:

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  check_dependencies:
    name: Check dependency versions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Run check
        run: node scripts/check-v-next-dependencies.js

  check_npm_scripts:
    name: Check that the npm scripts are consistent
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Run check
        run: node scripts/check-v-next-npm-scripts.js

  list-packages:
    name: List packages
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: yq -p yaml -o json pnpm-lock.yaml | tee pnpm-lock.json
      - id: generate
        env:
          PACKAGE_IGNORE: |
            [
              ".",
              "packages/",
              "v-next/example-project"
            ]
          COMMON_FILTERS: |
            [
              ".github/workflows/v-next-ci.yml",
              "config-v-next/**",
              "pnpm-lock.yaml"
            ]
        run: |
          echo "filters<<EOF" >> $GITHUB_OUTPUT
          node scripts/generate-filters.js |
            yq -Po yaml 'with_entries(.key |= sub("^v-next/", ""))' |
            tee -a $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - id: filter
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        with:
          filters: ${{ steps.generate.outputs.filters }}

  lint:
    needs: list-packages

    if: needs.list-packages.outputs.packages != '[]'

    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.list-packages.outputs.packages) }}

    name: "[${{ matrix.package }}] lint"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: v-next/${{ matrix.package }}

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
        with:
          node-version: 22
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline
      - name: Build
        run: pnpm build
      - name: Lint
        run: pnpm lint

  lint-aggregate:
    needs: lint

    if: ${{ !cancelled() }}

    name: lint
    runs-on: ubuntu-latest

    steps:
      - env:
          result: ${{ needs.lint.result }}
        run: |
          if [[ "$result" == "failure" ]]; then
            exit 1
          fi
        shell: bash

  ci:
    needs: list-packages

    if: needs.list-packages.outputs.packages != '[]'

    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.list-packages.outputs.packages) }}
        os: [ubuntu-latest, macos-13, macos-latest, windows-latest]
        node: [22]

    name: "[${{ matrix.package }}] ci on ${{ matrix.os }} (Node ${{ matrix.node }})"
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: v-next/${{ matrix.package }}

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
        with:
          node-version: ${{ matrix.node }}
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline
      - name: Build
        run: pnpm build
      - name: Run tests
        run: pnpm run test

  ci-aggregate:
    needs: ci

    if: ${{ !cancelled() }}

    name: ci
    runs-on: ubuntu-latest

    steps:
      - env:
          result: ${{ needs.ci.result }}
        run: |
          if [[ "$result" == "failure" ]]; then
            exit 1
          fi
        shell: bash
